<?php

declare(strict_types=1);

/*
 * LobLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace LobLib\Controllers;

use Core\Request\Parameters\FormParam;
use Core\Request\Parameters\HeaderParam;
use Core\Request\Parameters\QueryParam;
use Core\Response\Types\ErrorType;
use CoreInterfaces\Core\Request\RequestMethod;
use LobLib\Exceptions\ApiException;
use LobLib\Exceptions\Domains0Error1Exception;
use LobLib\Models\Case1Enum;
use LobLib\Models\ContentTypeEnum;
use LobLib\Models\UsAutocompletions;

class USAutocompletionsController extends BaseController
{
    /**
     * Given an address prefix consisting of a partial primary line, as well as optional input of city,
     * state, and zip code, this functionality returns up to 10 full US address suggestions. Not all of
     * them will turn out to be valid addresses; they'll need to be [verified](#operation/verification_us).
     *
     * @param string $contentType
     * @param string $addressPrefix Only accepts numbers and street names in an alphanumeric format.
     * @param string|null $mCase Casing of the verified address. Possible values are `upper` and
     *        `proper` for uppercased (e.g. "PO BOX") and proper-cased (e.g. "PO Box"),
     *        respectively. Only affects `primary_line`, `city`, and `state`. Default casing is
     *        `upper`.
     * @param bool|null $validAddresses Possible values are `true` and `false`. If false, not all of
     *        the suggestions in the response will be valid addresses; they'll need to be verified
     *        in order to determine the deliverability. The valid_addresses flag will greatly
     *        reduce the number of keystrokes needed before reaching an intended address.
     * @param string|null $city An optional city input used to filter suggestions. Case insensitive
     *        and does not match partial abbreviations.
     * @param string|null $state An optional state input used to filter suggestions. Case
     *        insensitive and does not match partial abbreviations.
     * @param string|null $zipCode An optional ZIP Code input used to filter suggestions. Matches
     *        partial entries.
     * @param bool|null $geoIpSort If `true`, sort suggestions by proximity to the IP set in the
     *        `X-Forwarded-For` header.
     *
     * @return UsAutocompletions Response from the API call
     *
     * @throws ApiException Thrown if API call fails
     */
    public function autocompletion(
        string $contentType,
        string $addressPrefix,
        ?string $mCase = null,
        ?bool $validAddresses = false,
        ?string $city = null,
        ?string $state = null,
        ?string $zipCode = null,
        ?bool $geoIpSort = null
    ): UsAutocompletions {
        $_reqBuilder = $this->requestBuilder(RequestMethod::POST, '/us_autocompletions')
            ->auth('basicAuth')
            ->parameters(
                HeaderParam::init('Content-Type', $contentType)->serializeBy([ContentTypeEnum::class, 'checkValue']),
                FormParam::init('address_prefix', $addressPrefix),
                QueryParam::init('case', $mCase)->serializeBy([Case1Enum::class, 'checkValue']),
                QueryParam::init('valid_addresses', $validAddresses),
                FormParam::init('city', $city),
                FormParam::init('state', $state),
                FormParam::init('zip_code', $zipCode),
                FormParam::init('geo_ip_sort', $geoIpSort)
            );

        $_resHandler = $this->responseHandler()
            ->throwErrorOn('0', ErrorType::init('Error', Domains0Error1Exception::class))
            ->type(UsAutocompletions::class);

        return $this->execute($_reqBuilder, $_resHandler);
    }
}
