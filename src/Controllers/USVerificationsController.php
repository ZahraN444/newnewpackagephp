<?php

declare(strict_types=1);

/*
 * LobLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace LobLib\Controllers;

use Core\Request\Parameters\BodyParam;
use Core\Request\Parameters\FormParam;
use Core\Request\Parameters\HeaderParam;
use Core\Request\Parameters\QueryParam;
use Core\Response\Types\ErrorType;
use CoreInterfaces\Core\Request\RequestMethod;
use LobLib\Exceptions\ApiException;
use LobLib\Exceptions\Domains0Error1Exception;
use LobLib\Models\Case2Enum;
use LobLib\Models\ContentTypeEnum;
use LobLib\Models\MultipleComponents;
use LobLib\Models\UsVerification;
use LobLib\Models\UsVerifications;

class USVerificationsController extends BaseController
{
    /**
     * Verify a list of US or US territory addresses _with a live API key_. Requests to this endpoint with
     * a test API key will return a dummy response based on the primary line you input.
     *
     * @param string $contentType
     * @param MultipleComponents[] $addresses
     * @param string|null $mCase Casing of the verified address. Possible values are `upper` and
     *        `proper` for uppercased (e.g. "PO BOX") and proper-cased (e.g. "PO Box"),
     *        respectively. Only affects `recipient`, `primary_line`, `secondary_line`,
     *        `urbanization`, and `last_line`. Default casing is `upper`.
     *
     * @return UsVerifications Response from the API call
     *
     * @throws ApiException Thrown if API call fails
     */
    public function bulkUsVerifications(string $contentType, array $addresses, ?string $mCase = null): UsVerifications
    {
        $_reqBuilder = $this->requestBuilder(RequestMethod::POST, '/bulk/us_verifications')
            ->auth('basicAuth')
            ->parameters(
                HeaderParam::init('Content-Type', $contentType)->serializeBy([ContentTypeEnum::class, 'checkValue']),
                FormParam::init('addresses', $addresses),
                QueryParam::init('case', $mCase)->serializeBy([Case2Enum::class, 'checkValue'])
            );

        $_resHandler = $this->responseHandler()
            ->throwErrorOn('0', ErrorType::init('Error', Domains0Error1Exception::class))
            ->type(UsVerifications::class);

        return $this->execute($_reqBuilder, $_resHandler);
    }

    /**
     * Verify a US or US territory address _with a live API key_. The address can be in components (e.g.
     * `primary_line` is "210 King Street", `zip_code` is "94107") or as a single string (e.g. "210 King
     * Street 94107"), but not as both. Requests using a test API key validate required fields but return
     * empty values unless specific `primary_line` values are provided. See the [US Verifications Test
     * Environment](#section/US-Verifications-Test-Env) for details.
     *
     * @param array $body
     * @param string|null $mCase Casing of the verified address. Possible values are `upper` and
     *        `proper` for uppercased (e.g. "PO BOX") and proper-cased (e.g. "PO Box"),
     *        respectively. Only affects `recipient`, `primary_line`, `secondary_line`,
     *        `urbanization`, and `last_line`. Default casing is `upper`.
     *
     * @return UsVerification Response from the API call
     *
     * @throws ApiException Thrown if API call fails
     */
    public function usVerification(array $body, ?string $mCase = null): UsVerification
    {
        $_reqBuilder = $this->requestBuilder(RequestMethod::POST, '/us_verifications')
            ->auth('basicAuth')
            ->parameters(
                HeaderParam::init('Content-Type', 'application/json'),
                BodyParam::init($body),
                QueryParam::init('case', $mCase)->serializeBy([Case2Enum::class, 'checkValue'])
            );

        $_resHandler = $this->responseHandler()
            ->throwErrorOn('0', ErrorType::init('Error', Domains0Error1Exception::class))
            ->type(UsVerification::class);

        return $this->execute($_reqBuilder, $_resHandler);
    }
}
