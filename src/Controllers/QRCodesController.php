<?php

declare(strict_types=1);

/*
 * LobLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace LobLib\Controllers;

use Core\Request\Parameters\QueryParam;
use CoreInterfaces\Core\Request\RequestMethod;
use LobLib\Exceptions\ApiException;
use LobLib\Models\QrCodeAnalyticsResponse;

class QRCodesController extends BaseController
{
    /**
     * Returns a list of your QR codes. The QR codes are returned sorted by scan date, with the most
     * recently scanned QR codes appearing first.
     *
     * @param int|null $limit How many results to return.
     * @param int|null $offset An integer that designates the offset at which to begin returning
     *        results. Defaults to 0.
     * @param string[]|null $mInclude Request that the response include the total count by
     *        specifying `include=["total_count"]`.
     * @param array<string,string>|null $dateCreated Filter by date created. Accepted formats are
     *        ISO-8601 date or datetime, e.g. `{ "gt": "2012-01-01", "lt": "2012-01-31T12:34:56Z"
     *        }` where `gt` is >, `lt` is <, `gte` is ≥, and `lte` is ≤.
     * @param bool|null $scanned Filter list of responses to only include QR codes with at least one
     *        scan event.
     * @param array[]|null $resourceIds Filter by the resource ID.
     *
     * @return QrCodeAnalyticsResponse Response from the API call
     *
     * @throws ApiException Thrown if API call fails
     */
    public function qrCodesList(
        ?int $limit = 10,
        ?int $offset = 0,
        ?array $mInclude = null,
        ?array $dateCreated = null,
        ?bool $scanned = null,
        ?array $resourceIds = null
    ): QrCodeAnalyticsResponse {
        $_reqBuilder = $this->requestBuilder(RequestMethod::GET, '/qr_code_analytics')
            ->auth('basicAuth')
            ->parameters(
                QueryParam::init('limit', $limit),
                QueryParam::init('offset', $offset),
                QueryParam::init('include', $mInclude),
                QueryParam::init('date_created', $dateCreated),
                QueryParam::init('scanned', $scanned),
                QueryParam::init('resource_ids', $resourceIds)
            );

        $_resHandler = $this->responseHandler()->type(QrCodeAnalyticsResponse::class);

        return $this->execute($_reqBuilder, $_resHandler);
    }
}
