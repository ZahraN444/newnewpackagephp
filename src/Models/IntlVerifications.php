<?php

declare(strict_types=1);

/*
 * LobLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace LobLib\Models;

use LobLib\ApiHelper;
use stdClass;

class IntlVerifications implements \JsonSerializable
{
    /**
     * @var array<IntlVerification|Error>
     */
    private $addresses;

    /**
     * @var bool
     */
    private $errors;

    /**
     * @param array<IntlVerification|Error> $addresses
     * @param bool $errors
     */
    public function __construct(array $addresses, bool $errors)
    {
        $this->addresses = $addresses;
        $this->errors = $errors;
    }

    /**
     * Returns Addresses.
     *
     * @return array<IntlVerification|Error>
     */
    public function getAddresses(): array
    {
        return $this->addresses;
    }

    /**
     * Sets Addresses.
     *
     * @required
     * @maps addresses
     * @mapsBy oneOf(IntlVerification,Error)[]
     *
     * @param array<IntlVerification|Error> $addresses
     */
    public function setAddresses(array $addresses): void
    {
        $this->addresses = $addresses;
    }

    /**
     * Returns Errors.
     * Indicates whether any errors occurred during the verification process.
     */
    public function getErrors(): bool
    {
        return $this->errors;
    }

    /**
     * Sets Errors.
     * Indicates whether any errors occurred during the verification process.
     *
     * @required
     * @maps errors
     */
    public function setErrors(bool $errors): void
    {
        $this->errors = $errors;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['addresses'] =
            ApiHelper::getJsonHelper()->verifyTypes(
                $this->addresses,
                'oneOf(IntlVerification,Error)[]'
            );
        $json['errors']    = $this->errors;

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
