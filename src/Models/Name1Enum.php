<?php

declare(strict_types=1);

/*
 * LobLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace LobLib\Models;

use Core\Utils\CoreHelper;
use Exception;
use stdClass;

/**
 * Name of tracking event for Certified letters. Letters sent with USPS Certified Mail are fully
 * tracked by USPS, therefore their tracking events have an additional details object with more
 * detailed information about the tracking event. Some certified tracking event names have multiple
 * meanings, noted in the list here. See the description of the details object for the full set of
 * combined certified tracking event name meanings.
 *
 * * `Mailed` - Package has been accepted into the carrier network for delivery.
 *
 * * `In Transit` - Maps to four distinct stages of transit.
 *
 * * `In Local Area` - Package is at a location near the end destination.
 *
 * * `Processed for Delivery` - Maps to two distinct stages of delivery.
 *
 * * `Pickup Available` - Package is available for pickup at carrier location.
 *
 * * `Delivered` - Package has been delivered.
 *
 * * `Re-Routed` - Package has been forwarded.
 *
 * * `Returned to Sender` - Package is to be returned to sender.
 *
 * * `Issue` - Maps to (at least) 15 possible issues, some of which are actionable.
 */
class Name1Enum
{
    public const MAILED = 'Mailed';

    public const ENUM_IN_TRANSIT = 'In Transit';

    public const ENUM_IN_LOCAL_AREA = 'In Local Area';

    public const ENUM_PROCESSED_FOR_DELIVERY = 'Processed for Delivery';

    public const ENUM_PICKUP_AVAILABLE = 'Pickup Available';

    public const DELIVERED = 'Delivered';

    public const REROUTED = 'Re-Routed';

    public const ENUM_RETURNED_TO_SENDER = 'Returned to Sender';

    public const ISSUE = 'Issue';

    private const _ALL_VALUES = [
        self::MAILED,
        self::ENUM_IN_TRANSIT,
        self::ENUM_IN_LOCAL_AREA,
        self::ENUM_PROCESSED_FOR_DELIVERY,
        self::ENUM_PICKUP_AVAILABLE,
        self::DELIVERED,
        self::REROUTED,
        self::ENUM_RETURNED_TO_SENDER,
        self::ISSUE
    ];

    /**
     * Ensures that all the given values are present in this Enum.
     *
     * @param array|stdClass|null|string $value Value or a list/map of values to be checked
     *
     * @return array|null|string Input value(s), if all are a part of this Enum
     *
     * @throws Exception Throws exception if any given value is not in this Enum
     */
    public static function checkValue($value)
    {
        $value = json_decode(json_encode($value), true); // converts stdClass into array
        if (CoreHelper::checkValueOrValuesInList($value, self::_ALL_VALUES)) {
            return $value;
        }
        throw new Exception("$value is invalid for Name1Enum.");
    }
}
