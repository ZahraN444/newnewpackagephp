<?php

declare(strict_types=1);

/*
 * LobLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace LobLib\Models;

use stdClass;

class TrackingEventDetails implements \JsonSerializable
{
    /**
     * @var string
     */
    private $event;

    /**
     * @var string
     */
    private $description;

    /**
     * @var string|null
     */
    private $notes;

    /**
     * @var bool
     */
    private $actionRequired;

    /**
     * @param string $event
     * @param string $description
     * @param bool $actionRequired
     */
    public function __construct(string $event, string $description, bool $actionRequired)
    {
        $this->event = $event;
        $this->description = $description;
        $this->actionRequired = $actionRequired;
    }

    /**
     * Returns Event.
     */
    public function getEvent(): string
    {
        return $this->event;
    }

    /**
     * Sets Event.
     *
     * @required
     * @maps event
     * @factory \LobLib\Models\EventEnum::checkValue
     */
    public function setEvent(string $event): void
    {
        $this->event = $event;
    }

    /**
     * Returns Description.
     * The description as listed in the description for event.
     */
    public function getDescription(): string
    {
        return $this->description;
    }

    /**
     * Sets Description.
     * The description as listed in the description for event.
     *
     * @required
     * @maps description
     */
    public function setDescription(string $description): void
    {
        $this->description = $description;
    }

    /**
     * Returns Notes.
     * Event-specific notes from USPS about the tracking event.
     */
    public function getNotes(): ?string
    {
        return $this->notes;
    }

    /**
     * Sets Notes.
     * Event-specific notes from USPS about the tracking event.
     *
     * @maps notes
     */
    public function setNotes(?string $notes): void
    {
        $this->notes = $notes;
    }

    /**
     * Returns Action Required.
     * `true` if action is required by the end recipient, `false` otherwise.
     */
    public function getActionRequired(): bool
    {
        return $this->actionRequired;
    }

    /**
     * Sets Action Required.
     * `true` if action is required by the end recipient, `false` otherwise.
     *
     * @required
     * @maps action_required
     */
    public function setActionRequired(bool $actionRequired): void
    {
        $this->actionRequired = $actionRequired;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['event']           = EventEnum::checkValue($this->event);
        $json['description']     = $this->description;
        if (isset($this->notes)) {
            $json['notes']       = $this->notes;
        }
        $json['action_required'] = $this->actionRequired;

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
