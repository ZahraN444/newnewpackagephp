<?php

declare(strict_types=1);

/*
 * LobLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace LobLib\Models;

use Core\Utils\CoreHelper;
use Exception;
use stdClass;

/**
 * Must be a 2 letter country short-name code (ISO 3166). Does not accept `US`, `AS`, `PR`, `FM`, `GU`,
 * `MH`, `MP`, `PW`, or `VI`. For these addresses, please use the US verification API. Also does not
 * accept `PS`, which is not currently supported.
 */
class CountryExtendedEnum
{
    public const AD = 'AD';

    public const AE = 'AE';

    public const AF = 'AF';

    public const AG = 'AG';

    public const AI = 'AI';

    public const AL = 'AL';

    public const AN = 'AN';

    public const AO = 'AO';

    public const AQ = 'AQ';

    public const AR = 'AR';

    public const AT = 'AT';

    public const AU = 'AU';

    public const AW = 'AW';

    public const AZ = 'AZ';

    public const BA = 'BA';

    public const BB = 'BB';

    public const BD = 'BD';

    public const BE = 'BE';

    public const BF = 'BF';

    public const BG = 'BG';

    public const BH = 'BH';

    public const BI = 'BI';

    public const BJ = 'BJ';

    public const BM = 'BM';

    public const BN = 'BN';

    public const BO = 'BO';

    public const BQ = 'BQ';

    public const BR = 'BR';

    public const BS = 'BS';

    public const BT = 'BT';

    public const BW = 'BW';

    public const BY = 'BY';

    public const BZ = 'BZ';

    public const CA = 'CA';

    public const CD = 'CD';

    public const CG = 'CG';

    public const CH = 'CH';

    public const CI = 'CI';

    public const CK = 'CK';

    public const CL = 'CL';

    public const CM = 'CM';

    public const CN = 'CN';

    public const CO = 'CO';

    public const CR = 'CR';

    public const CS = 'CS';

    public const CU = 'CU';

    public const CV = 'CV';

    public const CW = 'CW';

    public const CY = 'CY';

    public const CZ = 'CZ';

    public const DE = 'DE';

    public const DJ = 'DJ';

    public const DK = 'DK';

    public const DM = 'DM';

    public const DO_ = 'DO';

    public const DZ = 'DZ';

    public const EC = 'EC';

    public const EE = 'EE';

    public const EG = 'EG';

    public const EH = 'EH';

    public const ER = 'ER';

    public const ES = 'ES';

    public const ET = 'ET';

    public const FI = 'FI';

    public const FJ = 'FJ';

    public const FK = 'FK';

    public const FO = 'FO';

    public const FR = 'FR';

    public const GA = 'GA';

    public const GB = 'GB';

    public const GD = 'GD';

    public const GE = 'GE';

    public const GH = 'GH';

    public const GI = 'GI';

    public const GL = 'GL';

    public const GM = 'GM';

    public const GN = 'GN';

    public const GQ = 'GQ';

    public const GR = 'GR';

    public const GS = 'GS';

    public const GT = 'GT';

    public const GW = 'GW';

    public const GY = 'GY';

    public const HK = 'HK';

    public const HN = 'HN';

    public const HR = 'HR';

    public const HT = 'HT';

    public const HU = 'HU';

    public const ID = 'ID';

    public const IE = 'IE';

    public const IL = 'IL';

    public const IN = 'IN';

    public const IO = 'IO';

    public const IQ = 'IQ';

    public const IR = 'IR';

    public const IS = 'IS';

    public const IT = 'IT';

    public const JM = 'JM';

    public const JO = 'JO';

    public const JP = 'JP';

    public const KE = 'KE';

    public const KG = 'KG';

    public const KH = 'KH';

    public const KI = 'KI';

    public const KM = 'KM';

    public const KN = 'KN';

    public const KP = 'KP';

    public const KR = 'KR';

    public const KW = 'KW';

    public const KY = 'KY';

    public const KZ = 'KZ';

    public const LA = 'LA';

    public const LB = 'LB';

    public const LC = 'LC';

    public const LI = 'LI';

    public const LK = 'LK';

    public const LR = 'LR';

    public const LS = 'LS';

    public const LT = 'LT';

    public const LU = 'LU';

    public const LV = 'LV';

    public const LY = 'LY';

    public const MA = 'MA';

    public const MC = 'MC';

    public const MD = 'MD';

    public const ME = 'ME';

    public const MG = 'MG';

    public const MK = 'MK';

    public const ML = 'ML';

    public const MM = 'MM';

    public const MN = 'MN';

    public const MO = 'MO';

    public const MR = 'MR';

    public const MS = 'MS';

    public const MT = 'MT';

    public const MU = 'MU';

    public const MV = 'MV';

    public const MW = 'MW';

    public const MX = 'MX';

    public const MY = 'MY';

    public const MZ = 'MZ';

    public const NA = 'NA';

    public const NE = 'NE';

    public const NF = 'NF';

    public const NG = 'NG';

    public const NI = 'NI';

    public const NL = 'NL';

    public const NO = 'NO';

    public const NP = 'NP';

    public const NR = 'NR';

    public const NU = 'NU';

    public const NZ = 'NZ';

    public const OM = 'OM';

    public const PA = 'PA';

    public const PE = 'PE';

    public const PG = 'PG';

    public const PH = 'PH';

    public const PK = 'PK';

    public const PL = 'PL';

    public const PN = 'PN';

    public const PT = 'PT';

    public const PY = 'PY';

    public const QA = 'QA';

    public const RO = 'RO';

    public const RS = 'RS';

    public const RU = 'RU';

    public const RW = 'RW';

    public const SA = 'SA';

    public const SB = 'SB';

    public const SC = 'SC';

    public const SD = 'SD';

    public const SE = 'SE';

    public const SG = 'SG';

    public const SH = 'SH';

    public const SI = 'SI';

    public const SK = 'SK';

    public const SL = 'SL';

    public const SM = 'SM';

    public const SN = 'SN';

    public const SO = 'SO';

    public const SR = 'SR';

    public const SS = 'SS';

    public const ST = 'ST';

    public const SV = 'SV';

    public const SX = 'SX';

    public const SY = 'SY';

    public const SZ = 'SZ';

    public const TC = 'TC';

    public const TD = 'TD';

    public const TG = 'TG';

    public const TH = 'TH';

    public const TJ = 'TJ';

    public const TK = 'TK';

    public const TL = 'TL';

    public const TM = 'TM';

    public const TN = 'TN';

    public const TO = 'TO';

    public const TR = 'TR';

    public const TT = 'TT';

    public const TV = 'TV';

    public const TW = 'TW';

    public const TZ = 'TZ';

    public const UA = 'UA';

    public const UG = 'UG';

    public const UY = 'UY';

    public const UZ = 'UZ';

    public const VA = 'VA';

    public const VC = 'VC';

    public const VE = 'VE';

    public const VG = 'VG';

    public const VN = 'VN';

    public const VU = 'VU';

    public const WS = 'WS';

    public const YE = 'YE';

    public const ZA = 'ZA';

    public const ZM = 'ZM';

    public const ZW = 'ZW';

    private const _ALL_VALUES = [
        self::AD,
        self::AE,
        self::AF,
        self::AG,
        self::AI,
        self::AL,
        self::AN,
        self::AO,
        self::AQ,
        self::AR,
        self::AT,
        self::AU,
        self::AW,
        self::AZ,
        self::BA,
        self::BB,
        self::BD,
        self::BE,
        self::BF,
        self::BG,
        self::BH,
        self::BI,
        self::BJ,
        self::BM,
        self::BN,
        self::BO,
        self::BQ,
        self::BR,
        self::BS,
        self::BT,
        self::BW,
        self::BY,
        self::BZ,
        self::CA,
        self::CD,
        self::CG,
        self::CH,
        self::CI,
        self::CK,
        self::CL,
        self::CM,
        self::CN,
        self::CO,
        self::CR,
        self::CS,
        self::CU,
        self::CV,
        self::CW,
        self::CY,
        self::CZ,
        self::DE,
        self::DJ,
        self::DK,
        self::DM,
        self::DO_,
        self::DZ,
        self::EC,
        self::EE,
        self::EG,
        self::EH,
        self::ER,
        self::ES,
        self::ET,
        self::FI,
        self::FJ,
        self::FK,
        self::FO,
        self::FR,
        self::GA,
        self::GB,
        self::GD,
        self::GE,
        self::GH,
        self::GI,
        self::GL,
        self::GM,
        self::GN,
        self::GQ,
        self::GR,
        self::GS,
        self::GT,
        self::GW,
        self::GY,
        self::HK,
        self::HN,
        self::HR,
        self::HT,
        self::HU,
        self::ID,
        self::IE,
        self::IL,
        self::IN,
        self::IO,
        self::IQ,
        self::IR,
        self::IS,
        self::IT,
        self::JM,
        self::JO,
        self::JP,
        self::KE,
        self::KG,
        self::KH,
        self::KI,
        self::KM,
        self::KN,
        self::KP,
        self::KR,
        self::KW,
        self::KY,
        self::KZ,
        self::LA,
        self::LB,
        self::LC,
        self::LI,
        self::LK,
        self::LR,
        self::LS,
        self::LT,
        self::LU,
        self::LV,
        self::LY,
        self::MA,
        self::MC,
        self::MD,
        self::ME,
        self::MG,
        self::MK,
        self::ML,
        self::MM,
        self::MN,
        self::MO,
        self::MR,
        self::MS,
        self::MT,
        self::MU,
        self::MV,
        self::MW,
        self::MX,
        self::MY,
        self::MZ,
        self::NA,
        self::NE,
        self::NF,
        self::NG,
        self::NI,
        self::NL,
        self::NO,
        self::NP,
        self::NR,
        self::NU,
        self::NZ,
        self::OM,
        self::PA,
        self::PE,
        self::PG,
        self::PH,
        self::PK,
        self::PL,
        self::PN,
        self::PT,
        self::PY,
        self::QA,
        self::RO,
        self::RS,
        self::RU,
        self::RW,
        self::SA,
        self::SB,
        self::SC,
        self::SD,
        self::SE,
        self::SG,
        self::SH,
        self::SI,
        self::SK,
        self::SL,
        self::SM,
        self::SN,
        self::SO,
        self::SR,
        self::SS,
        self::ST,
        self::SV,
        self::SX,
        self::SY,
        self::SZ,
        self::TC,
        self::TD,
        self::TG,
        self::TH,
        self::TJ,
        self::TK,
        self::TL,
        self::TM,
        self::TN,
        self::TO,
        self::TR,
        self::TT,
        self::TV,
        self::TW,
        self::TZ,
        self::UA,
        self::UG,
        self::UY,
        self::UZ,
        self::VA,
        self::VC,
        self::VE,
        self::VG,
        self::VN,
        self::VU,
        self::WS,
        self::YE,
        self::ZA,
        self::ZM,
        self::ZW
    ];

    /**
     * Ensures that all the given values are present in this Enum.
     *
     * @param array|stdClass|null|string $value Value or a list/map of values to be checked
     *
     * @return array|null|string Input value(s), if all are a part of this Enum
     *
     * @throws Exception Throws exception if any given value is not in this Enum
     */
    public static function checkValue($value)
    {
        $value = json_decode(json_encode($value), true); // converts stdClass into array
        if (CoreHelper::checkValueOrValuesInList($value, self::_ALL_VALUES)) {
            return $value;
        }
        throw new Exception("$value is invalid for CountryExtendedEnum.");
    }
}
