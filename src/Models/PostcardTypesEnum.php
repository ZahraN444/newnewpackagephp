<?php

declare(strict_types=1);

/*
 * LobLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace LobLib\Models;

use Core\Utils\CoreHelper;
use Exception;
use stdClass;

/**
 * Unique identifier referring to status of postcard
 */
class PostcardTypesEnum
{
    public const ENUM_POSTCARDCREATED = 'postcard.created';

    public const ENUM_POSTCARDRENDERED_PDF = 'postcard.rendered_pdf';

    public const ENUM_POSTCARDRENDERED_THUMBNAILS = 'postcard.rendered_thumbnails';

    public const ENUM_POSTCARDDELETED = 'postcard.deleted';

    public const ENUM_POSTCARDDELIVERED = 'postcard.delivered';

    public const ENUM_POSTCARDFAILED = 'postcard.failed';

    public const ENUM_POSTCARDMAILED = 'postcard.mailed';

    public const ENUM_POSTCARDIN_TRANSIT = 'postcard.in_transit';

    public const ENUM_POSTCARDIN_LOCAL_AREA = 'postcard.in_local_area';

    public const ENUM_POSTCARDINTERNATIONAL_EXIT = 'postcard.international_exit';

    public const ENUM_POSTCARDPROCESSED_FOR_DELIVERY = 'postcard.processed_for_delivery';

    public const ENUM_POSTCARDREROUTED = 'postcard.re-routed';

    public const ENUM_POSTCARDRETURNED_TO_SENDER = 'postcard.returned_to_sender';

    public const ENUM_POSTCARDVIEWED = 'postcard.viewed';

    private const _ALL_VALUES = [
        self::ENUM_POSTCARDCREATED,
        self::ENUM_POSTCARDRENDERED_PDF,
        self::ENUM_POSTCARDRENDERED_THUMBNAILS,
        self::ENUM_POSTCARDDELETED,
        self::ENUM_POSTCARDDELIVERED,
        self::ENUM_POSTCARDFAILED,
        self::ENUM_POSTCARDMAILED,
        self::ENUM_POSTCARDIN_TRANSIT,
        self::ENUM_POSTCARDIN_LOCAL_AREA,
        self::ENUM_POSTCARDINTERNATIONAL_EXIT,
        self::ENUM_POSTCARDPROCESSED_FOR_DELIVERY,
        self::ENUM_POSTCARDREROUTED,
        self::ENUM_POSTCARDRETURNED_TO_SENDER,
        self::ENUM_POSTCARDVIEWED
    ];

    /**
     * Ensures that all the given values are present in this Enum.
     *
     * @param array|stdClass|null|string $value Value or a list/map of values to be checked
     *
     * @return array|null|string Input value(s), if all are a part of this Enum
     *
     * @throws Exception Throws exception if any given value is not in this Enum
     */
    public static function checkValue($value)
    {
        $value = json_decode(json_encode($value), true); // converts stdClass into array
        if (CoreHelper::checkValueOrValuesInList($value, self::_ALL_VALUES)) {
            return $value;
        }
        throw new Exception("$value is invalid for PostcardTypesEnum.");
    }
}
