<?php

declare(strict_types=1);

/*
 * LobLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace LobLib\Models;

use stdClass;

class LinkSingle implements \JsonSerializable
{
    /**
     * @var string
     */
    private $redirectLink;

    /**
     * @var string|null
     */
    private $domain;

    /**
     * @var string|null
     */
    private $slug;

    /**
     * @var array<string,string>|null
     */
    private $metadataTag;

    /**
     * @var string|null
     */
    private $billingGroupId;

    /**
     * @param string $redirectLink
     */
    public function __construct(string $redirectLink)
    {
        $this->redirectLink = $redirectLink;
    }

    /**
     * Returns Redirect Link.
     * The original target URL.
     */
    public function getRedirectLink(): string
    {
        return $this->redirectLink;
    }

    /**
     * Sets Redirect Link.
     * The original target URL.
     *
     * @required
     * @maps redirect_link
     */
    public function setRedirectLink(string $redirectLink): void
    {
        $this->redirectLink = $redirectLink;
    }

    /**
     * Returns Domain.
     * The registered domain to be used for the short URL.
     */
    public function getDomain(): ?string
    {
        return $this->domain;
    }

    /**
     * Sets Domain.
     * The registered domain to be used for the short URL.
     *
     * @maps domain
     */
    public function setDomain(?string $domain): void
    {
        $this->domain = $domain;
    }

    /**
     * Returns Slug.
     * The unique path for the shortened URL, if empty a unique path will be used.
     */
    public function getSlug(): ?string
    {
        return $this->slug;
    }

    /**
     * Sets Slug.
     * The unique path for the shortened URL, if empty a unique path will be used.
     *
     * @maps slug
     */
    public function setSlug(?string $slug): void
    {
        $this->slug = $slug;
    }

    /**
     * Returns Metadata Tag.
     * Use metadata to store custom information for tagging and labeling back to your internal systems.
     * Must be an object with up to 20 key-value pairs. Keys must be at most 40 characters and values must
     * be at most 500 characters. Neither can contain the characters `"` and `\`. i.e. '{"customer_id" :
     * "NEWYORK2015"}' Nested objects are not supported.  See [Metadata](#section/Metadata) for more
     * information.
     *
     * @return array<string,string>|null
     */
    public function getMetadataTag(): ?array
    {
        return $this->metadataTag;
    }

    /**
     * Sets Metadata Tag.
     * Use metadata to store custom information for tagging and labeling back to your internal systems.
     * Must be an object with up to 20 key-value pairs. Keys must be at most 40 characters and values must
     * be at most 500 characters. Neither can contain the characters `"` and `\`. i.e. '{"customer_id" :
     * "NEWYORK2015"}' Nested objects are not supported.  See [Metadata](#section/Metadata) for more
     * information.
     *
     * @maps metadata_tag
     *
     * @param array<string,string>|null $metadataTag
     */
    public function setMetadataTag(?array $metadataTag): void
    {
        $this->metadataTag = $metadataTag;
    }

    /**
     * Returns Billing Group Id.
     * An optional string with the billing group ID to tag your usage with. Is used for billing purposes.
     * Requires special activation to use. See <a href="#tag/Billing-Groups">Billing Group API</a> for more
     * information.
     */
    public function getBillingGroupId(): ?string
    {
        return $this->billingGroupId;
    }

    /**
     * Sets Billing Group Id.
     * An optional string with the billing group ID to tag your usage with. Is used for billing purposes.
     * Requires special activation to use. See <a href="#tag/Billing-Groups">Billing Group API</a> for more
     * information.
     *
     * @maps billing_group_id
     */
    public function setBillingGroupId(?string $billingGroupId): void
    {
        $this->billingGroupId = $billingGroupId;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['redirect_link']        = $this->redirectLink;
        if (isset($this->domain)) {
            $json['domain']           = $this->domain;
        }
        if (isset($this->slug)) {
            $json['slug']             = $this->slug;
        }
        if (isset($this->metadataTag)) {
            $json['metadata_tag']     = $this->metadataTag;
        }
        if (isset($this->billingGroupId)) {
            $json['billing_group_id'] = $this->billingGroupId;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
