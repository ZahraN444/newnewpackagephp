<?php

declare(strict_types=1);

/*
 * LobLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace LobLib\Models;

use stdClass;

class AddressFieldsUs implements \JsonSerializable
{
    /**
     * @var string
     */
    private $addressLine1;

    /**
     * @var array
     */
    private $addressLine2 = [];

    /**
     * @var string
     */
    private $addressCity;

    /**
     * @var string
     */
    private $addressState;

    /**
     * @var string
     */
    private $addressZip;

    /**
     * @param string $addressLine1
     * @param string $addressCity
     * @param string $addressState
     * @param string $addressZip
     */
    public function __construct(string $addressLine1, string $addressCity, string $addressState, string $addressZip)
    {
        $this->addressLine1 = $addressLine1;
        $this->addressCity = $addressCity;
        $this->addressState = $addressState;
        $this->addressZip = $addressZip;
    }

    /**
     * Returns Address Line 1.
     * The primary number, street name, and directional information.
     */
    public function getAddressLine1(): string
    {
        return $this->addressLine1;
    }

    /**
     * Sets Address Line 1.
     * The primary number, street name, and directional information.
     *
     * @required
     * @maps address_line1
     */
    public function setAddressLine1(string $addressLine1): void
    {
        $this->addressLine1 = $addressLine1;
    }

    /**
     * Returns Address Line 2.
     * An optional field containing any information which can't fit into line 1.
     */
    public function getAddressLine2(): ?string
    {
        if (count($this->addressLine2) == 0) {
            return null;
        }
        return $this->addressLine2['value'];
    }

    /**
     * Sets Address Line 2.
     * An optional field containing any information which can't fit into line 1.
     *
     * @maps address_line2
     */
    public function setAddressLine2(?string $addressLine2): void
    {
        $this->addressLine2['value'] = $addressLine2;
    }

    /**
     * Unsets Address Line 2.
     * An optional field containing any information which can't fit into line 1.
     */
    public function unsetAddressLine2(): void
    {
        $this->addressLine2 = [];
    }

    /**
     * Returns Address City.
     */
    public function getAddressCity(): string
    {
        return $this->addressCity;
    }

    /**
     * Sets Address City.
     *
     * @required
     * @maps address_city
     */
    public function setAddressCity(string $addressCity): void
    {
        $this->addressCity = $addressCity;
    }

    /**
     * Returns Address State.
     * 2 letter state short-name code
     */
    public function getAddressState(): string
    {
        return $this->addressState;
    }

    /**
     * Sets Address State.
     * 2 letter state short-name code
     *
     * @required
     * @maps address_state
     */
    public function setAddressState(string $addressState): void
    {
        $this->addressState = $addressState;
    }

    /**
     * Returns Address Zip.
     * Must follow the ZIP format of `12345` or ZIP+4 format of `12345-1234`.
     */
    public function getAddressZip(): string
    {
        return $this->addressZip;
    }

    /**
     * Sets Address Zip.
     * Must follow the ZIP format of `12345` or ZIP+4 format of `12345-1234`.
     *
     * @required
     * @maps address_zip
     */
    public function setAddressZip(string $addressZip): void
    {
        $this->addressZip = $addressZip;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['address_line1']     = $this->addressLine1;
        if (!empty($this->addressLine2)) {
            $json['address_line2'] = $this->addressLine2['value'];
        }
        $json['address_city']      = $this->addressCity;
        $json['address_state']     = $this->addressState;
        $json['address_zip']       = $this->addressZip;

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
