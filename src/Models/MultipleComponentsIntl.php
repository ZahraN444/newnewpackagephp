<?php

declare(strict_types=1);

/*
 * LobLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace LobLib\Models;

use stdClass;

class MultipleComponentsIntl implements \JsonSerializable
{
    /**
     * @var array
     */
    private $recipient = [];

    /**
     * @var string
     */
    private $primaryLine;

    /**
     * @var string|null
     */
    private $secondaryLine;

    /**
     * @var string|null
     */
    private $city;

    /**
     * @var string|null
     */
    private $state;

    /**
     * @var string|null
     */
    private $postalCode;

    /**
     * @var string
     */
    private $country;

    /**
     * @param string $primaryLine
     * @param string $country
     */
    public function __construct(string $primaryLine, string $country)
    {
        $this->primaryLine = $primaryLine;
        $this->country = $country;
    }

    /**
     * Returns Recipient.
     * The intended recipient, typically a person's or firm's name.
     */
    public function getRecipient(): ?string
    {
        if (count($this->recipient) == 0) {
            return null;
        }
        return $this->recipient['value'];
    }

    /**
     * Sets Recipient.
     * The intended recipient, typically a person's or firm's name.
     *
     * @maps recipient
     */
    public function setRecipient(?string $recipient): void
    {
        $this->recipient['value'] = $recipient;
    }

    /**
     * Unsets Recipient.
     * The intended recipient, typically a person's or firm's name.
     */
    public function unsetRecipient(): void
    {
        $this->recipient = [];
    }

    /**
     * Returns Primary Line.
     * The primary delivery line (usually the street address) of the address.
     */
    public function getPrimaryLine(): string
    {
        return $this->primaryLine;
    }

    /**
     * Sets Primary Line.
     * The primary delivery line (usually the street address) of the address.
     *
     * @required
     * @maps primary_line
     */
    public function setPrimaryLine(string $primaryLine): void
    {
        $this->primaryLine = $primaryLine;
    }

    /**
     * Returns Secondary Line.
     * The secondary delivery line of the address. This field is typically empty but may contain
     * information if `primary_line` is too long.
     */
    public function getSecondaryLine(): ?string
    {
        return $this->secondaryLine;
    }

    /**
     * Sets Secondary Line.
     * The secondary delivery line of the address. This field is typically empty but may contain
     * information if `primary_line` is too long.
     *
     * @maps secondary_line
     */
    public function setSecondaryLine(?string $secondaryLine): void
    {
        $this->secondaryLine = $secondaryLine;
    }

    /**
     * Returns City.
     */
    public function getCity(): ?string
    {
        return $this->city;
    }

    /**
     * Sets City.
     *
     * @maps city
     */
    public function setCity(?string $city): void
    {
        $this->city = $city;
    }

    /**
     * Returns State.
     * The name of the state.
     */
    public function getState(): ?string
    {
        return $this->state;
    }

    /**
     * Sets State.
     * The name of the state.
     *
     * @maps state
     */
    public function setState(?string $state): void
    {
        $this->state = $state;
    }

    /**
     * Returns Postal Code.
     * The postal code.
     */
    public function getPostalCode(): ?string
    {
        return $this->postalCode;
    }

    /**
     * Sets Postal Code.
     * The postal code.
     *
     * @maps postal_code
     */
    public function setPostalCode(?string $postalCode): void
    {
        $this->postalCode = $postalCode;
    }

    /**
     * Returns Country.
     */
    public function getCountry(): string
    {
        return $this->country;
    }

    /**
     * Sets Country.
     *
     * @required
     * @maps country
     * @factory \LobLib\Models\CountryExtendedEnum::checkValue
     */
    public function setCountry(string $country): void
    {
        $this->country = $country;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (!empty($this->recipient)) {
            $json['recipient']      = $this->recipient['value'];
        }
        $json['primary_line']       = $this->primaryLine;
        if (isset($this->secondaryLine)) {
            $json['secondary_line'] = $this->secondaryLine;
        }
        if (isset($this->city)) {
            $json['city']           = $this->city;
        }
        if (isset($this->state)) {
            $json['state']          = $this->state;
        }
        if (isset($this->postalCode)) {
            $json['postal_code']    = $this->postalCode;
        }
        $json['country']            = CountryExtendedEnum::checkValue($this->country);

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
