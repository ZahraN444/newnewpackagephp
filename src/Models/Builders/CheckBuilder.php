<?php

declare(strict_types=1);

/*
 * LobLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace LobLib\Models\Builders;

use Core\Utils\CoreHelper;
use LobLib\Models\AddressUs;
use LobLib\Models\BankAccount;
use LobLib\Models\Check;
use LobLib\Models\ToAddressUsChk;

/**
 * Builder for model Check
 *
 * @see Check
 */
class CheckBuilder
{
    /**
     * @var Check
     */
    private $instance;

    private function __construct(Check $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new check Builder object.
     */
    public static function init(
        array $useType,
        string $id,
        float $amount,
        BankAccount $bankAccount,
        string $url,
        ToAddressUsChk $to,
        \DateTime $dateCreated,
        \DateTime $dateModified
    ): self {
        return new self(new Check($useType, $id, $amount, $bankAccount, $url, $to, $dateCreated, $dateModified));
    }

    /**
     * Sets description field.
     */
    public function description(?string $value): self
    {
        $this->instance->setDescription($value);
        return $this;
    }

    /**
     * Unsets description field.
     */
    public function unsetDescription(): self
    {
        $this->instance->unsetDescription();
        return $this;
    }

    /**
     * Sets metadata field.
     */
    public function metadata(?array $value): self
    {
        $this->instance->setMetadata($value);
        return $this;
    }

    /**
     * Sets merge variables field.
     */
    public function mergeVariables(?array $value): self
    {
        $this->instance->setMergeVariables($value);
        return $this;
    }

    /**
     * Unsets merge variables field.
     */
    public function unsetMergeVariables(): self
    {
        $this->instance->unsetMergeVariables();
        return $this;
    }

    /**
     * Sets send date field.
     */
    public function sendDate(?array $value): self
    {
        $this->instance->setSendDate($value);
        return $this;
    }

    /**
     * Sets mail type field.
     */
    public function mailType(?string $value): self
    {
        $this->instance->setMailType($value);
        return $this;
    }

    /**
     * Sets memo field.
     */
    public function memo(?string $value): self
    {
        $this->instance->setMemo($value);
        return $this;
    }

    /**
     * Unsets memo field.
     */
    public function unsetMemo(): self
    {
        $this->instance->unsetMemo();
        return $this;
    }

    /**
     * Sets check number field.
     */
    public function checkNumber(?int $value): self
    {
        $this->instance->setCheckNumber($value);
        return $this;
    }

    /**
     * Sets message field.
     */
    public function message(?string $value): self
    {
        $this->instance->setMessage($value);
        return $this;
    }

    /**
     * Sets from field.
     */
    public function from(?AddressUs $value): self
    {
        $this->instance->setFrom($value);
        return $this;
    }

    /**
     * Sets check bottom template id field.
     */
    public function checkBottomTemplateId(?string $value): self
    {
        $this->instance->setCheckBottomTemplateId($value);
        return $this;
    }

    /**
     * Sets attachment template id field.
     */
    public function attachmentTemplateId(?string $value): self
    {
        $this->instance->setAttachmentTemplateId($value);
        return $this;
    }

    /**
     * Sets check bottom template version id field.
     */
    public function checkBottomTemplateVersionId(?string $value): self
    {
        $this->instance->setCheckBottomTemplateVersionId($value);
        return $this;
    }

    /**
     * Sets attachment template version id field.
     */
    public function attachmentTemplateVersionId(?string $value): self
    {
        $this->instance->setAttachmentTemplateVersionId($value);
        return $this;
    }

    /**
     * Sets thumbnails field.
     */
    public function thumbnails(?array $value): self
    {
        $this->instance->setThumbnails($value);
        return $this;
    }

    /**
     * Sets expected delivery date field.
     */
    public function expectedDeliveryDate(?\DateTime $value): self
    {
        $this->instance->setExpectedDeliveryDate($value);
        return $this;
    }

    /**
     * Sets tracking events field.
     */
    public function trackingEvents(?array $value): self
    {
        $this->instance->setTrackingEvents($value);
        return $this;
    }

    /**
     * Unsets tracking events field.
     */
    public function unsetTrackingEvents(): self
    {
        $this->instance->unsetTrackingEvents();
        return $this;
    }

    /**
     * Sets status field.
     */
    public function status(?string $value): self
    {
        $this->instance->setStatus($value);
        return $this;
    }

    /**
     * Sets failure reason field.
     */
    public function failureReason(?string $value): self
    {
        $this->instance->setFailureReason($value);
        return $this;
    }

    /**
     * Unsets failure reason field.
     */
    public function unsetFailureReason(): self
    {
        $this->instance->unsetFailureReason();
        return $this;
    }

    /**
     * Sets object field.
     */
    public function object(?string $value): self
    {
        $this->instance->setObject($value);
        return $this;
    }

    /**
     * Sets deleted field.
     */
    public function deleted(?bool $value): self
    {
        $this->instance->setDeleted($value);
        return $this;
    }

    /**
     * Initializes a new check object.
     */
    public function build(): Check
    {
        return CoreHelper::clone($this->instance);
    }
}
