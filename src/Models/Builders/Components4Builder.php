<?php

declare(strict_types=1);

/*
 * LobLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace LobLib\Models\Builders;

use Core\Utils\CoreHelper;
use LobLib\Models\Components4;

/**
 * Builder for model Components4
 *
 * @see Components4
 */
class Components4Builder
{
    /**
     * @var Components4
     */
    private $instance;

    private function __construct(Components4 $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new components 4 Builder object.
     */
    public static function init(
        string $primaryNumber,
        string $streetPredirection,
        string $streetName,
        string $streetSuffix,
        string $streetPostdirection,
        string $secondaryDesignator,
        string $secondaryNumber,
        string $pmbDesignator,
        string $pmbNumber,
        string $extraSecondaryDesignator,
        string $extraSecondaryNumber,
        string $city,
        string $state,
        string $zipCode,
        string $zipCodePlus4,
        string $zipCodeType,
        string $deliveryPointBarcode,
        string $addressType,
        string $recordType,
        bool $defaultBuildingAddress,
        string $county,
        string $countyFips,
        string $carrierRoute,
        string $carrierRouteType
    ): self {
        return new self(new Components4(
            $primaryNumber,
            $streetPredirection,
            $streetName,
            $streetSuffix,
            $streetPostdirection,
            $secondaryDesignator,
            $secondaryNumber,
            $pmbDesignator,
            $pmbNumber,
            $extraSecondaryDesignator,
            $extraSecondaryNumber,
            $city,
            $state,
            $zipCode,
            $zipCodePlus4,
            $zipCodeType,
            $deliveryPointBarcode,
            $addressType,
            $recordType,
            $defaultBuildingAddress,
            $county,
            $countyFips,
            $carrierRoute,
            $carrierRouteType
        ));
    }

    /**
     * Sets latitude field.
     */
    public function latitude(?float $value): self
    {
        $this->instance->setLatitude($value);
        return $this;
    }

    /**
     * Unsets latitude field.
     */
    public function unsetLatitude(): self
    {
        $this->instance->unsetLatitude();
        return $this;
    }

    /**
     * Sets longitude field.
     */
    public function longitude(?float $value): self
    {
        $this->instance->setLongitude($value);
        return $this;
    }

    /**
     * Unsets longitude field.
     */
    public function unsetLongitude(): self
    {
        $this->instance->unsetLongitude();
        return $this;
    }

    /**
     * Initializes a new components 4 object.
     */
    public function build(): Components4
    {
        return CoreHelper::clone($this->instance);
    }
}
