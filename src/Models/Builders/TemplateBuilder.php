<?php

declare(strict_types=1);

/*
 * LobLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace LobLib\Models\Builders;

use Core\Utils\CoreHelper;
use LobLib\Models\Template;
use LobLib\Models\TemplateVersion;

/**
 * Builder for model Template
 *
 * @see Template
 */
class TemplateBuilder
{
    /**
     * @var Template
     */
    private $instance;

    private function __construct(Template $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new template Builder object.
     */
    public static function init(string $id, array $versions, TemplateVersion $publishedVersion): self
    {
        return new self(new Template($id, $versions, $publishedVersion));
    }

    /**
     * Sets description field.
     */
    public function description(?string $value): self
    {
        $this->instance->setDescription($value);
        return $this;
    }

    /**
     * Unsets description field.
     */
    public function unsetDescription(): self
    {
        $this->instance->unsetDescription();
        return $this;
    }

    /**
     * Sets object field.
     */
    public function object(?string $value): self
    {
        $this->instance->setObject($value);
        return $this;
    }

    /**
     * Sets metadata field.
     */
    public function metadata(?array $value): self
    {
        $this->instance->setMetadata($value);
        return $this;
    }

    /**
     * Sets date created field.
     */
    public function dateCreated(?\DateTime $value): self
    {
        $this->instance->setDateCreated($value);
        return $this;
    }

    /**
     * Sets date modified field.
     */
    public function dateModified(?\DateTime $value): self
    {
        $this->instance->setDateModified($value);
        return $this;
    }

    /**
     * Sets deleted field.
     */
    public function deleted(?bool $value): self
    {
        $this->instance->setDeleted($value);
        return $this;
    }

    /**
     * Initializes a new template object.
     */
    public function build(): Template
    {
        return CoreHelper::clone($this->instance);
    }
}
