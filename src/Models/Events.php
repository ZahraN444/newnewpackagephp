<?php

declare(strict_types=1);

/*
 * LobLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace LobLib\Models;

use LobLib\Utils\DateTimeHelper;
use stdClass;

class Events implements \JsonSerializable
{
    /**
     * @var string
     */
    private $id;

    /**
     * @var array
     */
    private $body;

    /**
     * @var string
     */
    private $referenceId;

    /**
     * @var EventType
     */
    private $eventType;

    /**
     * @var \DateTime
     */
    private $dateCreated;

    /**
     * @var string
     */
    private $object;

    /**
     * @param string $id
     * @param array $body
     * @param string $referenceId
     * @param EventType $eventType
     * @param \DateTime $dateCreated
     */
    public function __construct(
        string $id,
        array $body,
        string $referenceId,
        EventType $eventType,
        \DateTime $dateCreated
    ) {
        $this->id = $id;
        $this->body = $body;
        $this->referenceId = $referenceId;
        $this->eventType = $eventType;
        $this->dateCreated = $dateCreated;
    }

    /**
     * Returns Id.
     * Unique identifier prefixed with `evt_`.
     */
    public function getId(): string
    {
        return $this->id;
    }

    /**
     * Sets Id.
     * Unique identifier prefixed with `evt_`.
     *
     * @required
     * @maps id
     */
    public function setId(string $id): void
    {
        $this->id = $id;
    }

    /**
     * Returns Body.
     * The body of the associated resource as they were at the time of the event, i.e. the [postcard
     * object](#operation/postcard_retrieve), [the letter object](#operation/letter_retrieve), [the check
     * object](#operation/check_retrieve), [the address object](#operation/address_retrieve), or [the bank
     * account object](#operation/bank_account_retrieve). For `.deleted` events, the body matches the
     * response for the corresponding delete endpoint for that resource (e.g. the [postcard delete
     * response](#operation/postcard_delete)).
     */
    public function getBody(): array
    {
        return $this->body;
    }

    /**
     * Sets Body.
     * The body of the associated resource as they were at the time of the event, i.e. the [postcard
     * object](#operation/postcard_retrieve), [the letter object](#operation/letter_retrieve), [the check
     * object](#operation/check_retrieve), [the address object](#operation/address_retrieve), or [the bank
     * account object](#operation/bank_account_retrieve). For `.deleted` events, the body matches the
     * response for the corresponding delete endpoint for that resource (e.g. the [postcard delete
     * response](#operation/postcard_delete)).
     *
     * @required
     * @maps body
     */
    public function setBody(array $body): void
    {
        $this->body = $body;
    }

    /**
     * Returns Reference Id.
     * Unique identifier of the related resource for the event.
     */
    public function getReferenceId(): string
    {
        return $this->referenceId;
    }

    /**
     * Sets Reference Id.
     * Unique identifier of the related resource for the event.
     *
     * @required
     * @maps reference_id
     */
    public function setReferenceId(string $referenceId): void
    {
        $this->referenceId = $referenceId;
    }

    /**
     * Returns Event Type.
     */
    public function getEventType(): EventType
    {
        return $this->eventType;
    }

    /**
     * Sets Event Type.
     *
     * @required
     * @maps event_type
     */
    public function setEventType(EventType $eventType): void
    {
        $this->eventType = $eventType;
    }

    /**
     * Returns Date Created.
     * A timestamp in ISO 8601 format of the date the resource was created.
     */
    public function getDateCreated(): \DateTime
    {
        return $this->dateCreated;
    }

    /**
     * Sets Date Created.
     * A timestamp in ISO 8601 format of the date the resource was created.
     *
     * @required
     * @maps date_created
     * @factory \LobLib\Utils\DateTimeHelper::fromRfc3339DateTime
     */
    public function setDateCreated(\DateTime $dateCreated): void
    {
        $this->dateCreated = $dateCreated;
    }

    /**
     * Returns Object.
     * Value is resource type.
     */
    public function getObject(): string
    {
        return $this->object;
    }

    /**
     * Sets Object.
     * Value is resource type.
     *
     * @maps object
     */
    public function setObject(string $object): void
    {
        $this->object = $object;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['id']           = $this->id;
        $json['body']         = $this->body;
        $json['reference_id'] = $this->referenceId;
        $json['event_type']   = $this->eventType;
        $json['date_created'] = DateTimeHelper::toRfc3339DateTime($this->dateCreated);
        $json['object']       = $this->object;

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
