<?php

declare(strict_types=1);

/*
 * LobLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace LobLib\Models;

use stdClass;

class BuckslipUpdatable implements \JsonSerializable
{
    /**
     * @var array
     */
    private $description = [];

    /**
     * @var bool|null
     */
    private $autoReorder;

    /**
     * @var float|null
     */
    private $reorderQuantity;

    /**
     * Returns Description.
     * Description of the buckslip.
     */
    public function getDescription(): ?string
    {
        if (count($this->description) == 0) {
            return null;
        }
        return $this->description['value'];
    }

    /**
     * Sets Description.
     * Description of the buckslip.
     *
     * @maps description
     */
    public function setDescription(?string $description): void
    {
        $this->description['value'] = $description;
    }

    /**
     * Unsets Description.
     * Description of the buckslip.
     */
    public function unsetDescription(): void
    {
        $this->description = [];
    }

    /**
     * Returns Auto Reorder.
     * Allows for auto reordering
     */
    public function getAutoReorder(): ?bool
    {
        return $this->autoReorder;
    }

    /**
     * Sets Auto Reorder.
     * Allows for auto reordering
     *
     * @maps auto_reorder
     */
    public function setAutoReorder(?bool $autoReorder): void
    {
        $this->autoReorder = $autoReorder;
    }

    /**
     * Returns Reorder Quantity.
     * The quantity of items to be reordered (only required when auto_reorder is true).
     */
    public function getReorderQuantity(): ?float
    {
        return $this->reorderQuantity;
    }

    /**
     * Sets Reorder Quantity.
     * The quantity of items to be reordered (only required when auto_reorder is true).
     *
     * @maps reorder_quantity
     */
    public function setReorderQuantity(?float $reorderQuantity): void
    {
        $this->reorderQuantity = $reorderQuantity;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (!empty($this->description)) {
            $json['description']      = $this->description['value'];
        }
        if (isset($this->autoReorder)) {
            $json['auto_reorder']     = $this->autoReorder;
        }
        if (isset($this->reorderQuantity)) {
            $json['reorder_quantity'] = $this->reorderQuantity;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
