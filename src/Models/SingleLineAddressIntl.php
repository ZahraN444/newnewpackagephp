<?php

declare(strict_types=1);

/*
 * LobLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace LobLib\Models;

use stdClass;

class SingleLineAddressIntl implements \JsonSerializable
{
    /**
     * @var string
     */
    private $address;

    /**
     * @var string
     */
    private $country;

    /**
     * @param string $address
     * @param string $country
     */
    public function __construct(string $address, string $country)
    {
        $this->address = $address;
        $this->country = $country;
    }

    /**
     * Returns Address.
     * The entire address in one string (e.g., "370 Water St C1N 1C4").
     */
    public function getAddress(): string
    {
        return $this->address;
    }

    /**
     * Sets Address.
     * The entire address in one string (e.g., "370 Water St C1N 1C4").
     *
     * @required
     * @maps address
     */
    public function setAddress(string $address): void
    {
        $this->address = $address;
    }

    /**
     * Returns Country.
     */
    public function getCountry(): string
    {
        return $this->country;
    }

    /**
     * Sets Country.
     *
     * @required
     * @maps country
     * @factory \LobLib\Models\CountryExtendedEnum::checkValue
     */
    public function setCountry(string $country): void
    {
        $this->country = $country;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['address'] = $this->address;
        $json['country'] = CountryExtendedEnum::checkValue($this->country);

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
