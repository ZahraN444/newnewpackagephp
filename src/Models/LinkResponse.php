<?php

declare(strict_types=1);

/*
 * LobLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace LobLib\Models;

use stdClass;

class LinkResponse implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $id;

    /**
     * @var string|null
     */
    private $campaignId;

    /**
     * @var string|null
     */
    private $domainId;

    /**
     * @var string|null
     */
    private $resourceId;

    /**
     * @var string|null
     */
    private $redirectLink;

    /**
     * @var string|null
     */
    private $shortLink;

    /**
     * @var array<string,string>|null
     */
    private $metadataTag;

    /**
     * @var string|null
     */
    private $billingGroupId;

    /**
     * Returns Id.
     * Unique identifier prefixed with `lnk_`.
     */
    public function getId(): ?string
    {
        return $this->id;
    }

    /**
     * Sets Id.
     * Unique identifier prefixed with `lnk_`.
     *
     * @maps id
     */
    public function setId(?string $id): void
    {
        $this->id = $id;
    }

    /**
     * Returns Campaign Id.
     * Unique identifier prefixed with `cmp_`.
     */
    public function getCampaignId(): ?string
    {
        return $this->campaignId;
    }

    /**
     * Sets Campaign Id.
     * Unique identifier prefixed with `cmp_`.
     *
     * @maps campaign_id
     */
    public function setCampaignId(?string $campaignId): void
    {
        $this->campaignId = $campaignId;
    }

    /**
     * Returns Domain Id.
     * A unique identifier for the registered domain.
     */
    public function getDomainId(): ?string
    {
        return $this->domainId;
    }

    /**
     * Sets Domain Id.
     * A unique identifier for the registered domain.
     *
     * @maps domain_id
     */
    public function setDomainId(?string $domainId): void
    {
        $this->domainId = $domainId;
    }

    /**
     * Returns Resource Id.
     * The unique ID of the associated resource where the link was used.
     */
    public function getResourceId(): ?string
    {
        return $this->resourceId;
    }

    /**
     * Sets Resource Id.
     * The unique ID of the associated resource where the link was used.
     *
     * @maps resource_id
     */
    public function setResourceId(?string $resourceId): void
    {
        $this->resourceId = $resourceId;
    }

    /**
     * Returns Redirect Link.
     * The original target URL.
     */
    public function getRedirectLink(): ?string
    {
        return $this->redirectLink;
    }

    /**
     * Sets Redirect Link.
     * The original target URL.
     *
     * @maps redirect_link
     */
    public function setRedirectLink(?string $redirectLink): void
    {
        $this->redirectLink = $redirectLink;
    }

    /**
     * Returns Short Link.
     * The shortened URL for the associated original URL.
     */
    public function getShortLink(): ?string
    {
        return $this->shortLink;
    }

    /**
     * Sets Short Link.
     * The shortened URL for the associated original URL.
     *
     * @maps short_link
     */
    public function setShortLink(?string $shortLink): void
    {
        $this->shortLink = $shortLink;
    }

    /**
     * Returns Metadata Tag.
     * Use metadata to store custom information for tagging and labeling back to your internal systems.
     * Must be an object with up to 20 key-value pairs. Keys must be at most 40 characters and values must
     * be at most 500 characters. Neither can contain the characters `"` and `\`. i.e. '{"customer_id" :
     * "NEWYORK2015"}' Nested objects are not supported.  See [Metadata](#section/Metadata) for more
     * information.
     *
     * @return array<string,string>|null
     */
    public function getMetadataTag(): ?array
    {
        return $this->metadataTag;
    }

    /**
     * Sets Metadata Tag.
     * Use metadata to store custom information for tagging and labeling back to your internal systems.
     * Must be an object with up to 20 key-value pairs. Keys must be at most 40 characters and values must
     * be at most 500 characters. Neither can contain the characters `"` and `\`. i.e. '{"customer_id" :
     * "NEWYORK2015"}' Nested objects are not supported.  See [Metadata](#section/Metadata) for more
     * information.
     *
     * @maps metadata_tag
     *
     * @param array<string,string>|null $metadataTag
     */
    public function setMetadataTag(?array $metadataTag): void
    {
        $this->metadataTag = $metadataTag;
    }

    /**
     * Returns Billing Group Id.
     * An optional string with the billing group ID to tag your usage with. Is used for billing purposes.
     * Requires special activation to use. See <a href="#tag/Billing-Groups">Billing Group API</a> for more
     * information.
     */
    public function getBillingGroupId(): ?string
    {
        return $this->billingGroupId;
    }

    /**
     * Sets Billing Group Id.
     * An optional string with the billing group ID to tag your usage with. Is used for billing purposes.
     * Requires special activation to use. See <a href="#tag/Billing-Groups">Billing Group API</a> for more
     * information.
     *
     * @maps billing_group_id
     */
    public function setBillingGroupId(?string $billingGroupId): void
    {
        $this->billingGroupId = $billingGroupId;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->id)) {
            $json['id']               = $this->id;
        }
        if (isset($this->campaignId)) {
            $json['campaign_id']      = $this->campaignId;
        }
        if (isset($this->domainId)) {
            $json['domain_id']        = $this->domainId;
        }
        if (isset($this->resourceId)) {
            $json['resource_id']      = $this->resourceId;
        }
        if (isset($this->redirectLink)) {
            $json['redirect_link']    = $this->redirectLink;
        }
        if (isset($this->shortLink)) {
            $json['short_link']       = $this->shortLink;
        }
        if (isset($this->metadataTag)) {
            $json['metadata_tag']     = $this->metadataTag;
        }
        if (isset($this->billingGroupId)) {
            $json['billing_group_id'] = $this->billingGroupId;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
