<?php

declare(strict_types=1);

/*
 * LobLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace LobLib\Models;

use stdClass;

class Error1 implements \JsonSerializable
{
    /**
     * @var string
     */
    private $message;

    /**
     * @var int
     */
    private $statusCode;

    /**
     * @var string
     */
    private $code;

    /**
     * @param string $message
     * @param int $statusCode
     * @param string $code
     */
    public function __construct(string $message, int $statusCode, string $code)
    {
        $this->message = $message;
        $this->statusCode = $statusCode;
        $this->code = $code;
    }

    /**
     * Returns Message.
     * A human-readable message with more details about the error
     */
    public function getMessage(): string
    {
        return $this->message;
    }

    /**
     * Sets Message.
     * A human-readable message with more details about the error
     *
     * @required
     * @maps message
     */
    public function setMessage(string $message): void
    {
        $this->message = $message;
    }

    /**
     * Returns Status Code.
     */
    public function getStatusCode(): int
    {
        return $this->statusCode;
    }

    /**
     * Sets Status Code.
     *
     * @required
     * @maps status_code
     * @factory \LobLib\Models\FailureStatusCodeEnum::checkValue
     */
    public function setStatusCode(int $statusCode): void
    {
        $this->statusCode = $statusCode;
    }

    /**
     * Returns Code.
     */
    public function getCode(): string
    {
        return $this->code;
    }

    /**
     * Sets Code.
     *
     * @required
     * @maps code
     * @factory \LobLib\Models\CodeEnum::checkValue
     */
    public function setCode(string $code): void
    {
        $this->code = $code;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['message']     = $this->message;
        $json['status_code'] = FailureStatusCodeEnum::checkValue($this->statusCode);
        $json['code']        = CodeEnum::checkValue($this->code);

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
