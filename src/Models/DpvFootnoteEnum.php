<?php

declare(strict_types=1);

/*
 * LobLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace LobLib\Models;

use Core\Utils\CoreHelper;
use Exception;
use stdClass;

class DpvFootnoteEnum
{
    public const AA = 'AA';

    public const A1 = 'A1';

    public const BB = 'BB';

    public const CC = 'CC';

    public const N1 = 'N1';

    public const F1 = 'F1';

    public const G1 = 'G1';

    public const U1 = 'U1';

    public const M1 = 'M1';

    public const M3 = 'M3';

    public const P1 = 'P1';

    public const P3 = 'P3';

    public const R1 = 'R1';

    public const R7 = 'R7';

    public const RR = 'RR';

    private const _ALL_VALUES = [
        self::AA,
        self::A1,
        self::BB,
        self::CC,
        self::N1,
        self::F1,
        self::G1,
        self::U1,
        self::M1,
        self::M3,
        self::P1,
        self::P3,
        self::R1,
        self::R7,
        self::RR
    ];

    /**
     * Ensures that all the given values are present in this Enum.
     *
     * @param array|stdClass|null|string $value Value or a list/map of values to be checked
     *
     * @return array|null|string Input value(s), if all are a part of this Enum
     *
     * @throws Exception Throws exception if any given value is not in this Enum
     */
    public static function checkValue($value)
    {
        $value = json_decode(json_encode($value), true); // converts stdClass into array
        if (CoreHelper::checkValueOrValuesInList($value, self::_ALL_VALUES)) {
            return $value;
        }
        throw new Exception("$value is invalid for DpvFootnoteEnum.");
    }
}
