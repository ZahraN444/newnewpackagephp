<?php

declare(strict_types=1);

/*
 * LobLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace LobLib\Models;

use stdClass;

class TemplateVersionUpdatable implements \JsonSerializable
{
    /**
     * @var array
     */
    private $description = [];

    /**
     * @var array|null
     */
    private $engine;

    /**
     * @var string[]|null
     */
    private $requiredVars;

    /**
     * Returns Description.
     * An internal description that identifies this resource. Must be no longer than 255 characters.
     */
    public function getDescription(): ?string
    {
        if (count($this->description) == 0) {
            return null;
        }
        return $this->description['value'];
    }

    /**
     * Sets Description.
     * An internal description that identifies this resource. Must be no longer than 255 characters.
     *
     * @maps description
     */
    public function setDescription(?string $description): void
    {
        $this->description['value'] = $description;
    }

    /**
     * Unsets Description.
     * An internal description that identifies this resource. Must be no longer than 255 characters.
     */
    public function unsetDescription(): void
    {
        $this->description = [];
    }

    /**
     * Returns Engine.
     */
    public function getEngine(): ?array
    {
        return $this->engine;
    }

    /**
     * Sets Engine.
     *
     * @maps engine
     */
    public function setEngine(?array $engine): void
    {
        $this->engine = $engine;
    }

    /**
     * Returns Required Vars.
     * An array of required variables to be used in a template. Only available for `handlebars` templates.
     *
     * @return string[]|null
     */
    public function getRequiredVars(): ?array
    {
        return $this->requiredVars;
    }

    /**
     * Sets Required Vars.
     * An array of required variables to be used in a template. Only available for `handlebars` templates.
     *
     * @maps required_vars
     *
     * @param string[]|null $requiredVars
     */
    public function setRequiredVars(?array $requiredVars): void
    {
        $this->requiredVars = $requiredVars;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (!empty($this->description)) {
            $json['description']   = $this->description['value'];
        }
        if (isset($this->engine)) {
            $json['engine']        = $this->engine;
        }
        if (isset($this->requiredVars)) {
            $json['required_vars'] = $this->requiredVars;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
