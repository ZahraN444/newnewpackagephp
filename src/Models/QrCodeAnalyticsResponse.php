<?php

declare(strict_types=1);

/*
 * LobLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace LobLib\Models;

use stdClass;

class QrCodeAnalyticsResponse implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $object;

    /**
     * @var int|null
     */
    private $count;

    /**
     * @var int|null
     */
    private $totalCount;

    /**
     * @var int|null
     */
    private $scannedCount;

    /**
     * @var QrCodeScans[]|null
     */
    private $data;

    /**
     * Returns Object.
     * Value is resource type.
     */
    public function getObject(): ?string
    {
        return $this->object;
    }

    /**
     * Sets Object.
     * Value is resource type.
     *
     * @maps object
     */
    public function setObject(?string $object): void
    {
        $this->object = $object;
    }

    /**
     * Returns Count.
     * number of resources in a set
     */
    public function getCount(): ?int
    {
        return $this->count;
    }

    /**
     * Sets Count.
     * number of resources in a set
     *
     * @maps count
     */
    public function setCount(?int $count): void
    {
        $this->count = $count;
    }

    /**
     * Returns Total Count.
     * Indicates the total number of records. Provided when the request specifies an "include" query
     * parameter
     */
    public function getTotalCount(): ?int
    {
        return $this->totalCount;
    }

    /**
     * Sets Total Count.
     * Indicates the total number of records. Provided when the request specifies an "include" query
     * parameter
     *
     * @maps total_count
     */
    public function setTotalCount(?int $totalCount): void
    {
        $this->totalCount = $totalCount;
    }

    /**
     * Returns Scanned Count.
     * Indicates the number of QR Codes out of `count` that were scanned atleast once.
     */
    public function getScannedCount(): ?int
    {
        return $this->scannedCount;
    }

    /**
     * Sets Scanned Count.
     * Indicates the number of QR Codes out of `count` that were scanned atleast once.
     *
     * @maps scanned_count
     */
    public function setScannedCount(?int $scannedCount): void
    {
        $this->scannedCount = $scannedCount;
    }

    /**
     * Returns Data.
     * List of QR code analytics
     *
     * @return QrCodeScans[]|null
     */
    public function getData(): ?array
    {
        return $this->data;
    }

    /**
     * Sets Data.
     * List of QR code analytics
     *
     * @maps data
     *
     * @param QrCodeScans[]|null $data
     */
    public function setData(?array $data): void
    {
        $this->data = $data;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->object)) {
            $json['object']        = $this->object;
        }
        if (isset($this->count)) {
            $json['count']         = $this->count;
        }
        if (isset($this->totalCount)) {
            $json['total_count']   = $this->totalCount;
        }
        if (isset($this->scannedCount)) {
            $json['scanned_count'] = $this->scannedCount;
        }
        if (isset($this->data)) {
            $json['data']          = $this->data;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
