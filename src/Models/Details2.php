<?php

declare(strict_types=1);

/*
 * LobLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace LobLib\Models;

use stdClass;

class Details2 implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $mailType;

    /**
     * @var string|null
     */
    private $size;

    /**
     * @var QrCode1|null
     */
    private $qrCode;

    /**
     * Returns Mail Type.
     */
    public function getMailType(): ?string
    {
        return $this->mailType;
    }

    /**
     * Sets Mail Type.
     *
     * @maps mail_type
     * @factory \LobLib\Models\MailTypeEnum::checkValue
     */
    public function setMailType(?string $mailType): void
    {
        $this->mailType = $mailType;
    }

    /**
     * Returns Size.
     */
    public function getSize(): ?string
    {
        return $this->size;
    }

    /**
     * Sets Size.
     *
     * @maps size
     * @factory \LobLib\Models\PostcardSizeEnum::checkValue
     */
    public function setSize(?string $size): void
    {
        $this->size = $size;
    }

    /**
     * Returns Qr Code.
     */
    public function getQrCode(): ?QrCode1
    {
        return $this->qrCode;
    }

    /**
     * Sets Qr Code.
     *
     * @maps qr_code
     */
    public function setQrCode(?QrCode1 $qrCode): void
    {
        $this->qrCode = $qrCode;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->mailType)) {
            $json['mail_type'] = MailTypeEnum::checkValue($this->mailType);
        }
        if (isset($this->size)) {
            $json['size']      = PostcardSizeEnum::checkValue($this->size);
        }
        if (isset($this->qrCode)) {
            $json['qr_code']   = $this->qrCode;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
