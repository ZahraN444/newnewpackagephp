<?php

declare(strict_types=1);

/*
 * LobLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace LobLib\Models;

use stdClass;

/**
 * The mapping of column headers in your file to Lob-required fields for the resource created. See our
 * <a href="https://help.lob.com/print-and-mail/building-a-mail-strategy/campaign-or-triggered-
 * sends/campaign-audience-guide#required-columns-2" target="_blank">Campaign Audience Guide</a> for
 * additional details.
 */
class RequiredAddressColumns implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $name;

    /**
     * @var string|null
     */
    private $addressLine1;

    /**
     * @var string|null
     */
    private $addressCity;

    /**
     * @var string|null
     */
    private $addressState;

    /**
     * @var string|null
     */
    private $addressZip;

    /**
     * Returns Name.
     * The column header from the csv file that should be mapped to the required field `name`
     */
    public function getName(): ?string
    {
        return $this->name;
    }

    /**
     * Sets Name.
     * The column header from the csv file that should be mapped to the required field `name`
     *
     * @maps name
     */
    public function setName(?string $name): void
    {
        $this->name = $name;
    }

    /**
     * Returns Address Line 1.
     * The column header from the csv file that should be mapped to the required field `address_line1`
     */
    public function getAddressLine1(): ?string
    {
        return $this->addressLine1;
    }

    /**
     * Sets Address Line 1.
     * The column header from the csv file that should be mapped to the required field `address_line1`
     *
     * @maps address_line1
     */
    public function setAddressLine1(?string $addressLine1): void
    {
        $this->addressLine1 = $addressLine1;
    }

    /**
     * Returns Address City.
     * The column header from the csv file that should be mapped to the required field `address_city`
     */
    public function getAddressCity(): ?string
    {
        return $this->addressCity;
    }

    /**
     * Sets Address City.
     * The column header from the csv file that should be mapped to the required field `address_city`
     *
     * @maps address_city
     */
    public function setAddressCity(?string $addressCity): void
    {
        $this->addressCity = $addressCity;
    }

    /**
     * Returns Address State.
     * The column header from the csv file that should be mapped to the required field `address_state`
     */
    public function getAddressState(): ?string
    {
        return $this->addressState;
    }

    /**
     * Sets Address State.
     * The column header from the csv file that should be mapped to the required field `address_state`
     *
     * @maps address_state
     */
    public function setAddressState(?string $addressState): void
    {
        $this->addressState = $addressState;
    }

    /**
     * Returns Address Zip.
     * The column header from the csv file that should be mapped to the required field `address_zip`
     */
    public function getAddressZip(): ?string
    {
        return $this->addressZip;
    }

    /**
     * Sets Address Zip.
     * The column header from the csv file that should be mapped to the required field `address_zip`
     *
     * @maps address_zip
     */
    public function setAddressZip(?string $addressZip): void
    {
        $this->addressZip = $addressZip;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['name']          = $this->name;
        $json['address_line1'] = $this->addressLine1;
        $json['address_city']  = $this->addressCity;
        $json['address_state'] = $this->addressState;
        $json['address_zip']   = $this->addressZip;

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
