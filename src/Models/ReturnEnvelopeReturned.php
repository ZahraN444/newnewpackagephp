<?php

declare(strict_types=1);

/*
 * LobLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace LobLib\Models;

use stdClass;

class ReturnEnvelopeReturned implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $id;

    /**
     * @var string|null
     */
    private $alias;

    /**
     * @var string|null
     */
    private $url;

    /**
     * @var string|null
     */
    private $object;

    /**
     * Returns Id.
     * The unique ID of the Return Envelope.
     */
    public function getId(): ?string
    {
        return $this->id;
    }

    /**
     * Sets Id.
     * The unique ID of the Return Envelope.
     *
     * @maps id
     */
    public function setId(?string $id): void
    {
        $this->id = $id;
    }

    /**
     * Returns Alias.
     * A quick reference name for the Return Envelope.
     */
    public function getAlias(): ?string
    {
        return $this->alias;
    }

    /**
     * Sets Alias.
     * A quick reference name for the Return Envelope.
     *
     * @maps alias
     */
    public function setAlias(?string $alias): void
    {
        $this->alias = $alias;
    }

    /**
     * Returns Url.
     * The url of the return envelope.
     */
    public function getUrl(): ?string
    {
        return $this->url;
    }

    /**
     * Sets Url.
     * The url of the return envelope.
     *
     * @maps url
     */
    public function setUrl(?string $url): void
    {
        $this->url = $url;
    }

    /**
     * Returns Object.
     * Value is resource type.
     */
    public function getObject(): ?string
    {
        return $this->object;
    }

    /**
     * Sets Object.
     * Value is resource type.
     *
     * @maps object
     */
    public function setObject(?string $object): void
    {
        $this->object = $object;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->id)) {
            $json['id']     = $this->id;
        }
        if (isset($this->alias)) {
            $json['alias']  = $this->alias;
        }
        if (isset($this->url)) {
            $json['url']    = $this->url;
        }
        if (isset($this->object)) {
            $json['object'] = $this->object;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
