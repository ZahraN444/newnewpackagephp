<?php

declare(strict_types=1);

/*
 * LobLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace LobLib\Tests\Controllers;

use Core\TestCase\BodyMatchers\KeysBodyMatcher;
use Core\TestCase\TestParam;
use LobLib\Controllers\QRCodesController;
use LobLib\Exceptions;

class QRCodesControllerTest extends BaseTestController
{
    /**
     * @var QRCodesController QRCodesController instance
     */
    protected static $controller;

    /**
     * Setup test class
     */
    public static function setUpBeforeClass(): void
    {
        self::$controller = parent::getClient()->getQRCodesController();
    }

    public function testQrCodesList()
    {
        // Parameters for the API call
        $limit = 10;
        $offset = 0;
        $mInclude = null;
        $dateCreated = null;
        $scanned = null;
        $resourceIds = null;

        // Perform API call
        $result = null;
        try {
            $result = self::$controller->qrCodesList(
                $limit,
                $offset,
                $mInclude,
                $dateCreated,
                $scanned,
                $resourceIds
            );
        } catch (Exceptions\ApiException $e) {
        }

        $headers = [];
        $headers['Content-Type'] = ['application/json', true];

        // Assert result with expected response
        $this->newTestCase($result)
            ->expectStatus(200)
            ->allowExtraHeaders()
            ->expectHeaders($headers)
            ->bodyMatcher(KeysBodyMatcher::init(TestParam::object(
                '{"data":[{"resource_id":"ltr_d5a5a89da9106f8","date_created":"2019-07-27T23:49' .
                ':01.511Z","number_of_scans":2,"scans":[{"ip_location":"127.0.0.1","scan_date":"' .
                '2022-07-27T23:49:01.511Z"},{"ip_location":"127.0.0.1","scan_date":"2022-07-29T2' .
                '3:45:00.436Z"}]},{"resource_id":"psc_d5a5a89da9106f8","date_created":"2022-09-2' .
                '7T23:49:01.511Z","number_of_scans":1,"scans":[{"ip_location":"127.0.0.1","scan_' .
                'date":"2022-09-27T23:49:01.511Z"}]}],"object":"list","count":2,"scanned_count":' .
                '2,"total_count":2}'
            )))
            ->assert();
    }
}
