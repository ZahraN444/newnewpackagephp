<?php

declare(strict_types=1);

/*
 * LobLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace LobLib\Tests\Controllers;

use Core\TestCase\BodyMatchers\KeysBodyMatcher;
use Core\TestCase\TestParam;
use LobLib\Controllers\CampaignsController;
use LobLib\Exceptions;

class CampaignsControllerTest extends BaseTestController
{
    /**
     * @var CampaignsController CampaignsController instance
     */
    protected static $controller;

    /**
     * Setup test class
     */
    public static function setUpBeforeClass(): void
    {
        self::$controller = parent::getClient()->getCampaignsController();
    }

    public function testCampaignsList()
    {
        // Parameters for the API call
        $limit = 10;
        $mInclude = null;
        $beforeAfter = null;

        // Perform API call
        $result = null;
        try {
            $result = self::$controller->campaignsList($limit, $mInclude, $beforeAfter);
        } catch (Exceptions\ApiException $e) {
        }

        $headers = [];
        $headers['Content-Type'] = ['application/json', true];

        // Assert result with expected response
        $this->newTestCase($result)
            ->expectStatus(200)
            ->allowExtraHeaders()
            ->expectHeaders($headers)
            ->bodyMatcher(KeysBodyMatcher::init(TestParam::object(
                '{"data":[{"id":"cmp_e05ee61ff80764b","billing_group_id":"bg_fe3079dcdd80e5ae",' .
                '"name":"My Campaign","description":"My Campaign\'s description","schedule_type"' .
                ':"immediate","send_date":null,"target_delivery_date":null,"cancel_window_campai' .
                'gn_minutes":60,"metadata":{},"use_type":"marketing","is_draft":true,"deleted":f' .
                'alse,"creatives":[],"uploads":[],"auto_cancel_if_ncoa":false,"date_created":"20' .
                '17-09-05T17:47:53.767Z","date_modified":"2017-09-05T17:47:53.767Z","object":"ca' .
                'mpaign"}],"object":"list","previous_url":null,"next_url":null,"count":1}'
            )))
            ->assert();
    }
}
